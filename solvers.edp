include "macros.edp"

macro Stokes()
{
  solve st([u1, u2, p], [v1, v2, q]) =
    int2d(Th)(2 * mu * tr(EPS(u1,u2)) * EPS(v1,v2) - p * div(v1,v2))
    - int2d(Th)(q * div(u1,u2))
    - int2d(Th)(p * q * 1e-8)
    + on(3, u1 = 0, u2 = 0) 
    + on(1, u1 = udc1, u2 = udc2);
} //EOM


macro AdjointStokes() 
{
  solve ad([w1, w2, qq], [v1, v2, q]) =
    int2d(Th)(2 * mu * tr(EPS(w1, w2))*EPS(v1, v2) - qq * div(v1, v2) - q * div(w1, w2))
    + int2d(Th)(-4 * mu * tr(EPS(u1, u2)) * EPS(v1, v2))
    + on(1,3, w2 = 0, w1 = 0);
}//EOM


/* LFD: Derivative of Lagrange (objective) function */
macro RegularizationExtension() 
{
  solve re([tta1, tta2], [eta1, eta2]) =
    int2d(Th)(gm * tr(EPS(tta1, eta2)) * EPS(eta1, eta2))
    + int1d(Th,3)((1 - gm) * (tr(gradT(tta1)) * gradT(eta1) + tr(gradT(tta2)) * gradT(eta2)))
    - int1d(Th,3)(LFD * tr([tta1, tta2]) * [N.x, N.y])
    + on(1, 2, tta1 = 0, tta2 = 0);
} //EOM