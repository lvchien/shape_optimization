include "getARGV.idp"

int case = getARGV("--case", 1);                                // Case study
string fmsh = getARGV("--fmsh", "fluid");                       // File name of the mesh of fluid domain
string smsh = getARGV("--smsh", "solid");                       // File name of the mesh of solid domain
string dmsh = getARGV("--dmsh", "domain");                      // File name of the mesh of whole domain
int nps = getARGV("--nps", 3);                                  // Number of meshing points

/* Label of borders */
int FREE = 1;
int FWALL = 11;
int FIN = 12;
int FOUT = 13;
int SWALL = 21;
int SDEFO = 22;
int SLOAD = 23;
int DUMMY = 30;

mesh Fh, Sh, Th;
system("mkdir " + "meshes/FSI");

/* Build meshes */
if(case == 1)
{
    border FW1(t = 0.0, 0.3){x = t; y = 0.0; label = FWALL;}
    border F1(t = 0.0, 1.0){x = 0.3 + 0.18 * t; y = 0.3 * t; label = FREE;}
    border F2(t = 0.48, 0.52){x = t; y = 0.3; label = FREE;}
    border F3(t = 1.0, 0.0){x = 0.7 - 0.18 * t; y = 0.3 * t; label = FREE;}
    border FW2(t = 0.7, 2.0){x = t; y = 0.0; label = FWALL;}
    border OUT(t = 0.0, 0.5){x = 2.0; y = t; label = FOUT;}
    border FW3(t = 2.0, 0.0){x = t; y = 0.5; label = FWALL;}
    border IN(t = 0.5, 0.0){x = 0.0; y = t; label = FIN;}
    border SW(t = 0.3, 0.7){x = t; y = 0.0; label = SWALL;}
    border F4(t = 0, 2 * pi){x = 0.43 + 0.04 * cos(t); y = 0.1 + 0.04 * sin(t); label = FREE;}
    border D1(t = 0, 0.01){x = 0.3; y = t; label = DUMMY;}
    border D2(t = 0.3, 0.48){x = t; y = 0.01; label = DUMMY;}
    border D3(t = 0.01, 0.3){x = 0.48; y = t; label = DUMMY;}
    border D4(t = 0.48, 0.52){x = t; y = 0.3; label = DUMMY;}
    border D5(t = 0.3, 0.01){x = 0.52; y = t; label = DUMMY;}
    border D6(t = 0.52, 0.7){x = t; y = 0.01; label = DUMMY;}
    border D7(t = 0.01, 0){x = 0.7; y = t; label = DUMMY;}

    Fh = buildmesh(FW1(6 * nps) + F1(30 * nps) + F2(4 * nps) + F3(30 * nps) + FW2(26 * nps) + OUT(10 * nps) + FW3(40 * nps) + IN(10 * nps) + F4(20 * nps));
    Sh = buildmesh(SW(40 * nps) + F1(-30 * nps) + F2(-4 * nps) + F3(-30 * nps) + F4(-20 * nps));
    Th = buildmesh(FW1(30 * nps) + D1(1 * nps) + D2(18 * nps) + D3(29 * nps) + D4(4 * nps) + D5(29 * nps) + D6(18 * nps) + D7(1 * nps) 
        + FW2(130 * nps) + OUT(50 * nps) + FW3(200 * nps) + IN(50 * nps));
}
else if(case == 2)
{
    border FW1(t = 0.0, 2.0){x = t; y = 1.0; label = FWALL;}
    border FW2(t = 1.0, 0.0){x = 2.0; y = t; label = FWALL;}
    border FW3(t = 2.0, 7.0){x = t; y = 0.0; label = FWALL;}
    border OUT(t = 0.0, 3.0){x = 7.0; y = t; label = FOUT;}
    border FW4(t = 7.0, 2.0){x = t; y = 3.0; label = FWALL;}
    border FW5(t = 3.0, 2.0){x = 2.0; y = t; label = FWALL;}
    border FW6(t = 2.0, 0.0){x = t; y = 2.0; label = FWALL;}
    border IN(t = 2.0, 1.0){x = 0.0; y = t; label = FIN;}
    border SW1(t = 3.0, 3.5){x = t; y = 0.5; label = SWALL;}
    border F1(t = 0.5, 2.5){x = 3.5; y = t; label = FREE;}
    border SW2(t = 3.5, 3.0){x = t; y = 2.5; label = SWALL;}
    border F2(t = 2.5, 0.5){x = 3.0; y = t; label = FREE;}

    Fh = buildmesh(FW1(4 * nps) + FW2(2 * nps) + FW3(10 * nps) + OUT(6 * nps) + FW4(10 * nps) + FW5(2 * nps) + FW6(4 * nps) + IN(2 * nps) + SW1(-1 * nps) + F1(-4 * nps) + SW2(-1 * nps) + F2(-4 * nps));
    Sh = buildmesh(SW1(1 * nps) + F1(4 * nps) + SW2(1 * nps) + F2(4 * nps));
    Th = buildmesh(FW1(4 * nps) + FW2(2 * nps) + FW3(10 * nps) + OUT(6 * nps) + FW4(10 * nps) + FW5(2 * nps) + FW6(4 * nps) + IN(2 * nps));
}
else if(case == 3)
{
    border FW1(t = 0.0, 2.0){x = t; y = 0.0; label = FWALL;}
    border OUT(t = 0.0, 1.0){x = 2.0; y = t; label = FOUT;}
    border FW2(t = 2.0, 0.0){x = t; y = 1.0; label = FWALL;}
    border IN(t = 1.0, 0.0){x = 0.0; y = t; label = FIN;}
    border SW1(t = 0.95, 1.05){x = t; y = 0.45; label = SWALL;}
    border SW2(t = 0.45, 0.55){x = 1.05; y = t; label = SWALL;}
    border SW3(t = 1.05, 0.95){x = t; y = 0.55; label = SWALL;}
    border SW4(t = 0.55, 0.45){x = 0.95; y = t; label = SWALL;}
    border F(t = 0, 2 * pi){x = 1.0 + 0.1 * cos(t); y = 0.5 + 0.2 * sin(t); label = FREE;}

    Fh = buildmesh(FW1(20 * nps) + OUT(10 * nps) + FW2(20 * nps) + IN(10 * nps) + F(-20 * nps) + SW1(2 * nps) + SW2(2 * nps) + SW3(2 * nps) + SW4(2 * nps));
    Sh = buildmesh(F(20 * nps) + SW1(-2 * nps) + SW2(-2 * nps) + SW3(-2 * nps) + SW4(-2 * nps));
    Th = buildmesh(FW1(40 * nps) + OUT(20 * nps) + FW2(40 * nps) + IN(20 * nps) + SW1(-4 * nps) + SW2(-4 * nps) + SW3(-4 * nps) + SW4(-4 * nps));
}
else if(case == 4)
{
    border FW1(t = 0.0, 2.0){x = t; y = 0.0; label = FWALL;}
    border OUT(t = 0.0, 1.0){x = 2.0; y = t; label = FOUT;}
    border FW2(t = 2.0, 0.0){x = t; y = 1.0; label = FWALL;}
    border IN(t = 1.0, 0.0){x = 0.0; y = t; label = FIN;}
    border F(t = 0, 2 * pi){x = 1.0 + 0.1 * cos(t); y = 0.5 + 0.2 * sin(t); label = FREE;}

    Fh = buildmesh(FW1(20 * nps) + OUT(10 * nps) + FW2(20 * nps) + IN(10 * nps) + F(-15 * nps));
    Sh = buildmesh(F(15 * nps));
    Th = buildmesh(FW1(40 * nps) + OUT(20 * nps) + FW2(40 * nps) + IN(20 * nps));
}

savemesh(Fh, "meshes/FSI/" + fmsh + ".mesh");
savemesh(Sh, "meshes/FSI/" + smsh + ".mesh");
savemesh(Th, "meshes/FSI/" + dmsh + ".mesh");
plot(Fh, Sh);
// plot(Th);