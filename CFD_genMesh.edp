/* Copyright V.C. Le, T.T.M. Ta (2019) */

include "getARGV.idp"

/* Labels */
int IN = 1;
int OUT = 2;
int WALL = 3;

/* Parameters */
int case = getARGV("--case", 1);                                                        // test case
int np = getARGV("--np", 10);                                                           // number of meshing points
string mshname = getARGV("--mshname", "");                                              // name of mesh file

/* Build mesh */
mesh Th;
system("mkdir " + "meshes/CFD");

if (case == 1)                                                                          // pipe test case
{
    border fr0(t = 0, 1){x = -1 + 1.0/3 * t; y = 0; label = OUT;}
    border fr1(t = pi, pi/2){x = 2.0/3 * cos(t); y = 2.0/3 * sin(t); label = WALL;}
    border fr2(t = 0, 1){x = 0; y = 2.0/3 + 1.0/3 * t; label = IN;}
    border fr3(t = pi/2, pi){x = cos(t); y = sin(t); label = WALL;}

    Th= buildmesh(fr0(np) + fr1(2 * np) + fr2(np) + fr3(2 * np));
}
else if (case == 2)                                                                     // diffuser test case
{
    border fr0(t = 0, 1){x = t; y = 1.0/3 * t; label = WALL;}
    border fr1(t = 1.0/3, 2.0/3){x = 1; y = t; label = OUT;}
    border fr2(t = 1, 0){x = t; y = 1 - 1.0/3 * t; label = WALL;}
    border fr3(t = 1, 0){x = 0; y = t; label = IN;}

    Th= buildmesh(fr0(3 * np) + fr1(np) + fr2(3 * np) + fr3(3 * np));
}
else if (case == 3)                                                                     // double pipe test case
{
    border fr0(t = 0, 0.375){x = 2 * t; y = t; label = WALL;}
    border fr1(t = 0.375, 0.75){x = 2 * t; y = 0.75 - t; label = WALL;}
    border fr2(t = 0, 0.25){x = 1.5; y = t; label = OUT;}
    border fr3(t = 0.75, 0.5){x = 2 * t; y = 1 - t; label = WALL;}
    border fr4(t = 0.5, 0.75){x = 2 * t; y = t; label = WALL;}
    border fr5(t = 0.75, 1){x = 1.5; y = t; label = OUT;}
    border fr6(t = 0.75, 0.375){x = 2 * t; y = 0.25 + t; label = WALL;}
    border fr7(t = 0.375, 0){x = 2 * t; y = 1 - t; label = WALL;}
    border fr8(t = 1, 0.75){x = 0; y = t; label = IN;}
    border fr9(t = 0, 0.25){x = 2 * t; y = 0.75 - t; label = WALL;}
    border fr10(t = 0.25, 0){x = 2 * t; y = 0.25 + t; label = WALL;}
    border fr11(t = 0.25, 0){x = 0; y = t; label = IN;}

    Th= buildmesh(fr0(3 * np) + fr1(3 * np) + fr2(np) + fr3(2 * np) + fr4(2 * np) + fr5(np) 
                + fr6(3 * np) + fr7(3 * np) + fr8(np) + fr9(2 * np) + fr10(2 * np) + fr11(np));
}
else if (case == 4)                                                                     // obstacle test case
{
    border fr0(t = -0.75, 0.75){x = t; y = -0.5; label = IN;}
    border fr1(t = -0.5, 0.5){x = 0.75; y = t; label = OUT;}
    border fr2(t = 0.75, -0.75){x = t; y = 0.5; label = IN;}
    border fr3(t = 0.5, -0.5){x = -0.75; y = t; label = IN;}
    border fr4(t = 0, 2 * pi){x = 0.1 * sin(t); y = 0.2 * cos(t); label = WALL;}

    Th= buildmesh(fr0(3 * np) + fr1(2 * np) + fr2(3 * np) + fr3(2 * np) + fr4(5 * np));
}
else if (case == 5)                                                                     // human lung test case
{
    border fr0(t = 0, 1.05){x = t; y = 1.0/3; label = WALL;}
    border fr1(t = -1.0/60, 0){x = 7.0/6 + 7 * t; y = -20 * t; label = WALL;}
    border fr2(t = 0, 1.0/9){x = 7.0/6 + t; y = t; label = IN;}
    border fr3(t = 1.0/9, 2.0/9){x = 7.0/6 + t; y = t; label = WALL;}
    border fr4(t = 2.0/9, 1.0/3){x = 7.0/6 + t; y = t; label = IN;}
    border fr5(t = 1.0/3, 2.0/3){x = 1.5; y = t; label = WALL;}
    border fr6(t = 0, 1.0/9){x = 1.5 - t; y = 2.0/3 + t; label = IN;}
    border fr7(t = 1.0/9, 2.0/9){x = 1.5 - t; y = 2.0/3 + t; label = WALL;}
    border fr8(t = 2.0/9, 1.0/3){x = 1.5 - t; y = 2.0/3 + t; label = IN;}
    border fr9(t = 0, -1.0/60){x = 7.0/6 + 7 * t; y = 1 + 20 * t; label = WALL;}
    border fr10(t = 1.05, 0){x = t; y = 2.0/3; label = WALL;}
    border fr11(t = 2.0/3, 1.0/3){x = 0; y = t; label = OUT;}

    Th= buildmesh(fr0(5 * np) + fr1(2 * np) + fr2(np) + fr3(np) + fr4(np) + fr5(2 * np) 
                + fr6(np) + fr7(np) + fr8(np) + fr9(2 * np) + fr10(5 * np) + fr11(2 * np));
}

savemesh(Th, "meshes/" + mshname + ".mesh");
plot(Th);